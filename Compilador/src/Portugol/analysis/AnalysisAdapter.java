/* This file was generated by SableCC (http://www.sablecc.org/). */

package Portugol.analysis;

import java.util.*;
import Portugol.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstPrograma(AAstPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADclAstDeclaracoes(ADclAstDeclaracoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioAstDeclaracoes(AVazioAstDeclaracoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplasAstDeclconj(AMultiplasAstDeclconj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstDeclconj(ASimplesAstDeclconj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConstAstDeclconj(AConstAstDeclconj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdAstVarDef(AIdAstVarDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorAstVarDef(AVetorAstVarDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplasAstDclVarLista(AMultiplasAstDclVarLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstDclVarLista(ASimplesAstDclVarLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntAstTipo(AIntAstTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealAstTipo(ARealAstTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACAstTipo(ACAstTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntAstValor(AIntAstValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANrealAstValor(ANrealAstValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrAstValor(AStrAstValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExparitmeticaExpGeral(AExparitmeticaExpGeral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpLExpGeral(AExpLExpGeral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisExp(AMaisExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExp(AMenosExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicacaoExp(AMultiplicacaoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivisaoExp(ADivisaoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumerointExp(ANumerointExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdExp(AIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpExp(AExpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrExp(AStrExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANlogExpLogica(ANlogExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOubinExpLogica(AOubinExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorbinExpLogica(AXorbinExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEbinExpLogica(AEbinExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExpLogica(AIgualExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteExpLogica(ADiferenteExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExpLogica(AMaiorExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorIgualExpLogica(AMaiorIgualExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExpLogica(AMenorExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorIgualExpLogica(AMenorIgualExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeiaConjComandos(ALeiaConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEscrevaConjComandos(AEscrevaConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoConjComandos(AAtribuicaoConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicionalConjComandos(ACondicionalConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoConjComandos(AEnquantoConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaConjComandos(ARepitaConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFacaConjComandos(AFacaConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFacaPassoConjComandos(AFacaPassoConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvalieConjComandos(AAvalieConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioConjComandos(AVazioConjComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstLeia(ASimplesAstLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostaAstLeia(ACompostaAstLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstAtribuicao(AAstAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstEscreva(ASimplesAstEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostaAstEscreva(ACompostaAstEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstComandoSe(ASimplesAstComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompletoAstComandoSe(ACompletoAstComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoAstComandoEnquanto(AEnquantoAstComandoEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaAstComandoRepita(ARepitaAstComandoRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaAstComandoPara(AParaAstComandoPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstComplemento1(AAstComplemento1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstParaPasso(AAstParaPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstComplemento2(AAstComplemento2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstAvalie(AAstAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstCaso(AAstCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoAstSenaoAvalie(ASenaoAstSenaoAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioAstSenaoAvalie(AVazioAstSenaoAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstVarvirgula(ASimplesAstVarvirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostaAstVarvirgula(ACompostaAstVarvirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesAstExpvirgula(ASimplesAstExpvirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostaAstExpvirgula(ACompostaAstExpvirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNInt(TNInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNReal(TNReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimSe(TFimSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimAvalie(TFimAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimEnquanto(TFimEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRepita(TRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimPara(TFimPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDe(TDe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoispontos(TDoispontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoevirgula(TPontoevirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEsqParen(TEsqParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDirParen(TDirParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspaD(TAspaD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspaS(TAspaS node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEsqColchete(TEsqColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDirColchete(TDirColchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorigual(TMaiorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorigual(TMenorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentError(TCommentError node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentEnd(TCommentEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentBody(TCommentBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSlash(TSlash node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioSimples(TComentarioSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
